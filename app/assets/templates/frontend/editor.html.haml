.section.editor{"ng-class" => "{'fullscreen' : ctrl.fullscreen}"}
  .content
    .section-title-bar.editor-heading{"ng-class" => "{'shared' : ctrl.note.isPublic() }"}
      .title
        %input.input#note-title-editor{"ng-model" => "ctrl.note.content.title", "ng-keyup" => "$event.keyCode == 13 && ctrl.saveTitle($event)",
                  "ng-disabled" => "ctrl.note.locked", "ng-change" => "ctrl.nameChanged()", "ng-focus" => "ctrl.onNameFocus()",
                  "select-on-click" => "true"}
      .save-status {{ctrl.noteStatus}}
      .editor-menu
        %ul.nav.nav-pills
          %li.dropdown
            %a.dropdown-toggle{"ng-click" => "ctrl.clickedMenu()"}
              File
              %span.caret{"ng-if" => "!ctrl.note.locked"}
              %span{"ng-if" => " ctrl.note.locked"}
                .inline-icon.icon-lock
              %span.sr-only

            %ul.dropdown-menu.dropdown-menu-left.nt-dropdown-menu.dark{"ng-if" => "ctrl.showMenu && !ctrl.note.locked"}
              -# %li
              -#   %a.text{"ng-click" => "ctrl.selectedMenuItem(); ctrl.saveNote($event, note)"} Save
              -#   .shortcut Cmd + S
              %li
                %a.text{"ng-click" => "ctrl.selectedMenuItem(); ctrl.toggleFullScreen()"} Toggle Fullscreen
                .shortcut Cmd + O
              %li
                %a.text{"ng-click" => "ctrl.selectedMenuItem(); ctrl.toggleMarkdown()"} Toggle Markdown Preview
                .shortcut Cmd + M
              %li{"ng-if" => "!ctrl.note.hasEnabledPresentation()"}
                %a.text{"ng-click" => "ctrl.selectedMenuItem(); ctrl.shareNote()"} Share
              %li{"ng-if" => "ctrl.note.hasEnabledPresentation()"}
                %a.text{"ng-click" => "ctrl.selectedMenuItem(); ctrl.editUrlPressed()"} Edit URL
              %li{"ng-if" => "ctrl.note.hasEnabledPresentation()"}
                %a.text{"ng-click" => "ctrl.selectedMenuItem(); ctrl.unshareNote()"} Unshare
              %li
                %a.text{"ng-click" => "ctrl.deleteNote()"} Delete
        .markdown.icon{"ng-if" => "ctrl.editorMode == 'preview'", "ng-click" => "ctrl.showMarkdown = !ctrl.showMarkdown"}
          .icon-markdown
          .panel.panel-default.info-panel{"ng-if" => "ctrl.showMarkdown"}
            .panel-body{"style" => "text-align: center; color: black;"}
              This editor is Markdown enabled.
        .menu-right-container
          .public-link{"ng-if" => "ctrl.note.hasEnabledPresentation()"}
            %a.url{"ng-if" => "!ctrl.editingUrl", "href" => "{{ctrl.publicUrlForNote(ctrl.note)}}", "target" => "_blank"}
              %span.icon-rss.icon
              {{ctrl.publicUrlForNote(note)}}
            .edit-url{"ng-if" => "ctrl.editingUrl"}
              {{ctrl.url.base}}
              %input.input{"ng-model" => "ctrl.url.token", "ng-keyup" => "$event.keyCode == 13 && ctrl.saveUrl($event)",
                        "ng-disabled" => "ctrl.note.locked", "ng-change" => "ctrl.urlChanged()", "ng-focus" => "ctrl.onUrlFocus()",
                        "select-on-click" => "true", "autofocus" => "true"}

    .editor-content{"ng-class" => "{'shared' : ctrl.note.isPublic() }"}
      .sampler-container{"ng-if" => "ctrl.showSampler", "ng-click" => "ctrl.focusEditor()"}
        %strong.name-sampler.sampler{"typewrite" => "true", "text" =>  "ctrl.demoNoteNames", "type-delay" => "30", "initial-delay" => "1.5s",
                                      "iteration-callback" => "ctrl.callback", "prebegin-fn" => "ctrl.prebeginFn", "iteration-delay" => "2000", "cursor" => ""}
        %code{"ng-if" => "ctrl.currentDemoContent.text"}
          .content-sampler.sampler{"typewrite" => "true", "text" =>  "ctrl.currentDemoContent.text", "type-delay" => "10", "iteration-callback" => "ctrl.contentCallback"}
      %textarea.editable#note-text-editor{"ng-disabled" => "ctrl.note.locked", "ng-show" => "ctrl.editorMode == 'edit'", "ng-model" => "ctrl.note.content.text",
       "ng-change" => "ctrl.contentChanged()", "ng-click" => "ctrl.clickedTextArea()", "ng-focus" => "ctrl.onContentFocus()"}
      .preview{"ng-if" => "ctrl.editorMode == 'preview'", "ng-bind-html" => "ctrl.renderedContent()", "ng-dblclick" => "ctrl.onPreviewDoubleClick()"}
